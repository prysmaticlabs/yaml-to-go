# Add rules here to build your software
# See https://docs.bazel.build/versions/master/build-ref.html#BUILD_files

# Allow any ts_library rules in this workspace to reference the config
# Note: if you move the tsconfig.json file to a subdirectory, you can add an alias() here instead
#   so that ts_library rules still use it by default.
#   See https://www.npmjs.com/package/@bazel/typescript#installation
exports_files(["tsconfig.json"], visibility = ["//:__subpackages__"])

load("@npm_bazel_typescript//:index.bzl", "ts_library")
load("@build_bazel_rules_nodejs//:defs.bzl", "nodejs_binary")

ts_library(
    name = "lib",
    srcs = ["yaml-to-go.ts"],
    deps = [
        "@npm//yaml",
        "@npm//@types/yaml",
    ],
)

ts_library(
    name = "main",
    srcs = ["main.ts"],
    deps = [
        ":lib",
        "@npm//@types/node",
    ],
)

nodejs_binary(
    name = "bin",
    data = [
        ":main",
    ],
    entry_point = "yaml_to_go/main",
)
